{"version":3,"sources":["functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/ItemTodo.js","functionBased/components/TodoList.js","functionBased/components/TododContainer.js","App.js","reportWebVitals.js","index.js","functionBased/components/TodoItem.module.css"],"names":["headerStyle","padding","lineHeight","Header","style","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoItemProps","alert","className","type","placeholder","value","name","onChange","target","completedStyle","fontStyle","opacity","textDecoration","TodoItem","editing","setEditing","useEffect","console","log","viewMode","editMode","display","styles","item","onDoubleClick","textInput","todo","updateTodoProps","id","onKeyDown","event","key","checkbox","checked","completed","handleChangeProps","onClick","deleteTodoProps","TodosList","todos","map","TodoContainer","temp","localStorage","getItem","savedTodos","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","TodoList","prevState","filter","updatedTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.69f8e9fe.chunk.js","sourcesContent":["import React from 'react';\r\nconst headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"1.5em\",\r\n  }\r\nconst Header = () => {\r\n  \r\n        return (\r\n            <header style={headerStyle}>\r\n              <h1\r\n                style={{\r\n                  fontSize: \"4rem\",\r\n                  fontWeight: \"600\",\r\n                  marginBottom: \"2rem\",\r\n                  lineHeight: \"1em\",\r\n                  color: \"#ececec\",\r\n                  textTransform: \"lowercase\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                !N Целей к успеху\r\n              </h1>\r\n            </header>\r\n          )\r\n    \r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPaperPlane} from \"react-icons/fa\";\r\nconst InputTodo = props => {\r\n  const [inputText, setInputText] = useState({\r\n    title: \"\",\r\n  })\r\n\r\n  const onChange = e => {\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (inputText.title.trim()) {\r\n      props.addTodoItemProps(inputText.title)\r\n      setInputText({\r\n        title: \"\",\r\n      })\r\n    } else {\r\n      alert(\"Please write item\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add todo...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <button className=\"input-submit\"><FaPaperPlane/></button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default InputTodo","import React, {useState, useEffect} from \"react\";\r\nimport styles from \"./TodoItem.module.css\"\r\nimport {BsTrashFill} from 'react-icons/bs'\r\nimport {RiPencilLine} from 'react-icons/ri'\r\nconst completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  }\r\n  \r\nconst TodoItem=(props)=>{\r\n const [editing, setEditing] = useState(false)\r\n useEffect(() => {\r\n     return () => {\r\n       console.log(\"RaxMontyirovali\")\r\n     }\r\n }, [])\r\n  const handleEditing = () => {\r\n    setEditing(true)\r\n    console.log(\"hey child\")    \r\n  }\r\n  const handleUpdateDone = (event) => {\r\n   if(event.key === \"Enter\") {\r\n     setEditing(false)\r\n   }\r\n  }\r\n   \r\n      let viewMode = {}\r\n      let editMode = {}\r\n\r\n      if(editing){\r\n        viewMode.display = \"none\"\r\n      } else {\r\n        editMode.display = \"none\"\r\n      }\r\n    return (\r\n       \r\n        <li className={styles.item}>\r\n          <div onDoubleClick={handleEditing} style={viewMode}><RiPencilLine/></div>\r\n          <input type=\"text\" \r\n          style={editMode} \r\n          className={styles.textInput} \r\n          value={props.todo.title}\r\n          onChange={(e)=>{\r\n            props.updateTodoProps(e.target.value, props.todo.id)\r\n          }}\r\n          onKeyDown={handleUpdateDone}\r\n          />\r\n          <input\r\n            type=\"checkbox\"\r\n            className={styles.checkbox}\r\n            checked={props.todo.completed}\r\n            onChange={() =>props.handleChangeProps(props.todo.id)}\r\n          />\r\n          \r\n          <button onClick={() => props.deleteTodoProps(props.todo.id)}>\r\n            <BsTrashFill style={{ color: \"orangered\", fontSize: \"16px\" }} />\r\n          </button>\r\n          <span style={props.todo.completed ? completedStyle : null}>\r\n          {props.todo.title}\r\n          </span>\r\n          \r\n        </li>\r\n      \r\n\r\n      )\r\n    \r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./ItemTodo\";\r\n\r\nconst TodosList = props => {\r\n    return (\r\n      <ul>\r\n        {props.todos.map(todo => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            handleChangeProps={props.handleChangeProps}\r\n            deleteTodoProps={props.deleteTodoProps}\r\n            updateTodoProps={props.updateTodoProps}\r\n          />\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n  export default TodosList","import React,{useState, useEffect} from \"react\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\";\r\nimport TodoList from \"./TodoList\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n const TodoContainer = () =>  {\r\n    \r\n    // useEffect(() => {\r\n    //   console.log(\"test run eddeckt\")\r\n    //   const temp = localStorage.getItem(\"todos\")\r\n    //   const loadedTodos = JSON.parse(temp)\r\n    //   if(loadedTodos){\r\n    //     setTodos(loadedTodos)\r\n    //   }\r\n    // },[setTodos])\r\n    const getInitialTodos = () => {\r\n      const temp = localStorage.getItem(\"todos\")\r\n      const savedTodos = JSON.parse(temp)\r\n      console.log(\"tttttttttttt\")\r\n      return savedTodos || []\r\n    }\r\n    const [todos, setTodos] = useState(getInitialTodos())\r\n    useEffect(() => {       \r\n        const temp = JSON.stringify(todos)\r\n        localStorage.setItem(\"todos\", temp)\r\n     \r\n    }, [todos])\r\n    \r\n    // componentWillUnmount() {\r\n    //     console.log(\"Cleaning up...\")\r\n    // }\r\n    const handleChange = (id) => {\r\n        setTodos(prevState=>(\r\n             prevState.map(todo => {\r\n                if(todo.id === id){\r\n                    return{\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    }                    \r\n                }\r\n                return todo\r\n            })\r\n        ))\r\n    }\r\n    const addTodoItem = (title) => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            title: title,\r\n            completed: false\r\n        };\r\n        setTodos(\r\n            [...todos, newTodo]\r\n        );\r\n    }\r\n    const delTodo = id => {\r\n      setTodos([\r\n               ...todos.filter(todo => {\r\n                   return todo.id !== id;\r\n               })\r\n            ])\r\n    }\r\n    const updateTodo = (updatedTitle, id) => {\r\n      setTodos(\r\n            todos.map(todo=>{\r\n                if(todo.id === id){\r\n                    todo.title = updatedTitle\r\n                }\r\n                return todo\r\n        })\r\n        )\r\n    }\r\n    \r\n  \r\n   \r\n   \r\n        return (\r\n           <div className=\"container\"> \r\n           <div>\r\n           <Header/>  \r\n               <InputTodo addTodoItemProps={addTodoItem}/>          \r\n               <TodoList \r\n               todos = {todos} \r\n               handleChangeProps={handleChange}\r\n               deleteTodoProps = {delTodo}  \r\n               updateTodoProps = {updateTodo}                      \r\n               />\r\n           </div>                \r\n           </div>\r\n        )\r\n   \r\n}\r\nexport default TodoContainer","import './App.css';\nimport TodoContainer from './functionBased/components/TododContainer';\n\nfunction App() {\n  \n  return (\n    <div>\n      <TodoContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./App.css\"\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2IOhU\",\"checkbox\":\"TodoItem_checkbox__81TLh\",\"textInput\":\"TodoItem_textInput__3-EjY\"};"],"sourceRoot":""}